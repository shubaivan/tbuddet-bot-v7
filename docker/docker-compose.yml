version: '3'

services:
#  db-buddet:
#    image: 'mysql/mysql-server:8.0'
#    command:
#      - "mysqld"
#      - "--innodb_ft_min_token_size=1"
#    ports:
#      - '${FORWARD_DB_PORT:-3306}:${DB_PORT:-3306}'
#    environment:
#      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
#      MYSQL_ROOT_HOST: "%"
#      MYSQL_DATABASE: '${DB_DATABASE}'
#      MYSQL_USER: '${DB_USERNAME}'
#      MYSQL_PASSWORD: '${DB_PASSWORD}'
#      MYSQL_ALLOW_EMPTY_PASSWORD: 1
#      MYSQL_TCP_PORT: '${DB_PORT:-3306}'
#    expose:
#      - '${FORWARD_DB_PORT:-3306}'
#    volumes:
#      - 'db_buddet:/var/lib/mysql'
#      - './mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
#    networks:
#      - buddet
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
#      retries: 3
#      timeout: 5s


  db-buddet:
    # Name of the image and tag the Dockerfile creates (update this as needed)
    # image: timescale/timescaledb:1.6.0-pg12
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    command: postgres -c work_mem=4GB -c max_parallel_workers_per_gather=8 -c max_connections=900
    #    command: ["-c", "config_file=/postgresql_custom.conf"]
    volumes:
      - 'db_buddet:/data:rw'
    ports:
      - '127.0.0.1:5433:5432'
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - buddet
    logging:
      options:
        max-size: 20m
        max-file: "3"

volumes:
  db_buddet:

networks:
  buddet:
